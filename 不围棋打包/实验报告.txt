设计思路：
      先学习了easyx的基本用法，在十一月底至十二月初完成了交互界面和简单随机AI 的编写。这里用了模块化的界面程序；随机AI用
坐标数字的形式列举出所有能落子的位置，使用伪随机函数在其中选出一个随机数并落子。交互界面通过鼠标控制并四舍五入转换
为落子的正整数坐标。交互界面和附属存盘等系统功能占到了总计三千五百行代码中的大约一千五百行，基本具有了人性化的观感。
应该算比较成功的一个方面了。
       之后在十二月做做停停，查询了蒙特卡洛算法的基本原理并着手写策略算法。发现之前写的随机算法在这里
恰好可以得到部分应用。即对每个合法位置展开imitate函数，通过模拟随机落子及最终结果胜负判断胜率并选择胜率最高的位置。
这样就实现了简单的蒙特卡洛模拟算法，即中等AI。值得回忆的是，这里有一个搜索次数和搜索深度的问题，应该找到平衡。经过
反复实验确定搜索三十至四十步最为恰当，这样可以使平均搜索次数维持在一千左右。
       这时就又遇到了必须在局面结束前判断占优的问题。查阅资料了解到这是局部最大最小问题。于是用盘面上双方可以落子位置数目
作为主要依据，同时兼顾不围棋中“造眼”和“占角”的基本战术，分别对三者进行加权，完成了一个更全面的局面评估体系。但
可惜的是这一版本的搜索层数达到三层后在botzone上频繁超时，难以满足一秒的时间限制。但有限的几次与中等AI正常终局对战
中仍体现了优越性。
       {此外还做了点小彩蛋（要素过多）。}
（这个做小实验项目的过程体验还是挺不错的）



主要功能：完成了不围棋规则和主要策略的要求：
       人机部分实现了三个不同难度的AI供用户使用，其中既有简单的随机下法供“虐电”，也有对人类玩家充满挑战的中等蒙特卡
洛算法和高级max-min，蒙特卡洛和特殊判例加权的冷酷电脑（所需计算时间较长）供不同层次玩家选择。
       能够通过鼠标操作实现人机交互和简易的控制。完成了三级分支结构。
       pvp模式下完成了裁判程序和计步程序。另外，考虑到使用者的需求，还增添了一定程度的悔棋和存盘，读盘功能。
引入system命令行实现通过退出键和选项按钮实现了在不同界面的转换。
       是兄弟，就来和我一起不围棋！（大雾）